{"version":3,"sources":["services/api.js","services/getPokemon.js","components/types/pokemonTypes.js","components/types/typeImages.js","components/list/listPokemons.js","assests/png/pokeball.png","components/searth/searthPokemons.js","assests/png/intro.png","App.js","index.js"],"names":["require","config","api","axios","create","baseURL","process","headers","a","get","response","data","GetPokemon","pokemon","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","psychic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","typeImage","ListPoke","props","id","name","height","weight","nomeTipoUm","nomeTipoDois","vida","url","className","style","backgroundColor","boxShadow","marginTop","tamanho","peso","nome","toUpperCase","slice","tamanhoPercent","type","for","width","background","borderRadius","borderStyle","borderColor","borderWidth","src","marginBottom","border","padding","class","percent","filledBackground","transition","accomplished","filter","fontSize","marginLeft","color","SearthPokemons","useState","loading","setLoading","value","setValue","suggestions","setSuggestions","pokemons","setPokemons","poke","setPoke","setNomeTipoUm","setNomeTipoDois","setVida","useEffect","dados","GetAllPokemons","then","limparInput","pokemonHandle","event","setTimeout","preventDefault","string","charAt","toLowerCase","catch","error","notification","message","description","base_stat","lowerCasedCompanies","map","x","onSubmit","onSuggestionsClearRequested","onSuggestionsFetchRequested","language","startsWith","trim","getSuggestions","onSuggestionSelected","_","suggestionValue","getSuggestionValue","suggestion","renderSuggestion","inputProps","placeholder","onChange","newValue","method","highlightFirstSuggestion","onClick","pokeball","alt","App","ImageIntro","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d255d022.chunk.js","sourcesContent":["// https://pokeapi.co/api/v2/pokemon/mewtwo/\r\nimport axios from 'axios'\r\nrequire('dotenv').config()\r\n\r\nconst api = axios.create({\r\n    \r\n    baseURL: process.env.REACT_APP_URL_BASE, //BASE URL DO BACKEND\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }   \r\n})\r\n\r\nexport default api","import api from './api';\r\n\r\n// GET ALL POKEMON\r\nexport async function GetAllPokemons() {\r\n    const response = await api.get(`/?limit=1118`)\r\n    return response.data;\r\n}\r\n// GET POKEMON \r\nexport async function GetPokemon(pokemon) {\r\n    const response = await api.get(`/${pokemon}/`)\r\n    return response.data;\r\n}","const typeColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#a25921',\r\n    normal: '#ebebeb',\r\n    psychic: '#999999',\r\n    steel: '#9eb7b',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}\r\n\r\nexport default typeColors;","const typeImage = {\r\n    bug: 'https://media2.giphy.com/media/IJK7rvOHVNyfK/giphy.gif?cid=ecf05e4727ujnv6kb2qjemj11wt3u3iwsbaiwa5kzbt50dl7&rid=giphy.gif&ct=g',\r\n    dragon: 'https://media3.giphy.com/media/aQZVRqJjk897LWyFT8/giphy.gif?cid=ecf05e47iye63f1s2o8p5g2zge0zrbowpji2wtwgdtav3zle&rid=giphy.gif&ct=g',\r\n    fairy: 'https://media1.giphy.com/media/3o85xmzednh8Luf6bS/giphy.gif?cid=ecf05e47cq47gd4vx4w2h9yex6pn1j8v4hn51vrksluid4qj&rid=giphy.gif&ct=g',\r\n    fire: 'https://media1.giphy.com/media/XfdOpdexJfvKXbkfFa/giphy.gif?cid=ecf05e47zgh4c9ysoqmf8ehyb0mqlo12kuzb5qsv5m35rop9&rid=giphy.gif&ct=g',\r\n    ghost: 'https://media0.giphy.com/media/l2Sq9mX1EhkIZ0PCM/giphy.gif?cid=ecf05e47e0i4bfm83kcsfitcq9ujuik32nh0zxbc4gbaznrp&rid=giphy.gif&ct=g',\r\n    ground: 'https://media4.giphy.com/media/l41lGzN3LbiqUKmR2/giphy.gif?cid=ecf05e47ac4ua714ps2x3w9id13duuegpqwyagzy5hg8p808&rid=giphy.gif&ct=g',\r\n    normal: 'https://assets.pokemon.com//assets/cms2/img/misc/virtual-backgrounds/masters/forest.jpg',\r\n    psychic: 'https://media4.giphy.com/media/1smOzjU64WlTG/giphy.gif?cid=ecf05e47w81ypc4m4vjrc2jbipjykrbuyodzczvwneqyoyys&rid=giphy.gif&ct=g',\r\n    steel: 'https://media.giphy.com/media/qxHLSrcxxpwnwHOWqF/giphy.gif',\r\n    dark: 'https://media1.giphy.com/media/RlwF2vFb4y7bDnWvcO/giphy.gif?cid=ecf05e470nfh936yotpupa8qbushe6jnxmc1vcw6gytgk7m0&rid=giphy.gif&ct=g',\r\n    electric: 'https://media2.giphy.com/media/CKlafeh1NAxz35KTq4/giphy.gif?cid=ecf05e47a850kt3x8ae4zqe8g7vyy97kpc14mxlm6wligz2d&rid=giphy.gif&ct=g',\r\n    fighting: 'https://media.giphy.com/media/d4aVHC1HKnButuXC/giphy.gif',\r\n    flying: 'https://media.giphy.com/media/mno6BJfy8USic/giphy.gif',\r\n    grass: 'https://media.giphy.com/media/3o7aCRZYNerX4ovPwI/giphy.gif',\r\n    ice: 'https://media4.giphy.com/media/12wteMTXxjLaVO/giphy.gif?cid=ecf05e47wygspzhakxvmx6z0rh1jptcez3oanrb474kzo8vq&rid=giphy.gif&ct=g',\r\n    poison: 'https://media.giphy.com/media/uOU9gua9nugXirZicd/giphy.gif',\r\n    rock: 'https://media.giphy.com/media/11v1PDfWV0aOI/giphy.gif',\r\n    water: 'https://media.giphy.com/media/h6x0ROdzJy4TKyUu1b/giphy.gif'\r\n}\r\n\r\nexport default typeImage;","import React from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './styles.css';\r\nimport './poker_styles.css';\r\nimport \"react-step-progress-bar/styles.css\";\r\n\r\nimport { ProgressBar, Step } from \"react-step-progress-bar\";\r\nimport typeColors from '../types/pokemonTypes';\r\nimport typeImage from '../types/typeImages';\r\n\r\n\r\nconst ListPoke = (props) => {\r\n    const { id, name, height, weight, nomeTipoUm, nomeTipoDois, vida } = props;\r\n    const url = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`\r\n\r\n    if (!typeImage[nomeTipoUm.name]) {\r\n        return (\r\n            <div className=\"user_poker\" style={{ backgroundColor: '#1cabf2', boxShadow: 'none', marginTop: '-25px' }}>\r\n                <div className=\"center-poker\">\r\n                    <div className=\"pokebola\">\r\n                        <div className=\"pokebola-botao\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let tamanho = height;\r\n    let peso = weight / 10;\r\n    let nome = name[0].toUpperCase() + name.slice(1);\r\n\r\n    if (tamanho < 10) {\r\n        tamanho = '0.' + tamanho\r\n    }\r\n    if (tamanho >= 10) {\r\n        tamanho = tamanho / 10\r\n    }\r\n    // calculando tamanho percentual\r\n    var tamanhoPercent = tamanho * 10\r\n\r\n\r\n    // Card com dois tipos\r\n    if (nomeTipoDois.name) {\r\n        return (\r\n            <>\r\n                <input type=\"checkbox\" id=\"switch\" />\r\n\r\n                <label className=\"flip-container\" for=\"switch\" >\r\n                    <div className=\"flipper\">\r\n                        <div className=\"front\">\r\n                            <div className=\"front-component\" style={{\r\n                                width: '110%',\r\n                                height: '110%',\r\n                                background: `url(${typeImage[nomeTipoUm.name]}) center`,\r\n                                borderRadius: '20px',\r\n                                borderStyle: 'solid',\r\n                                borderColor: typeColors[nomeTipoUm.name],\r\n                                borderWidth: '10px'\r\n                            }}>\r\n                                <div className=\"round-image\" style={{\r\n                                    backgroundColor: typeColors[nomeTipoUm.name],\r\n                                }}><img src={url} /></div>\r\n                                <button type=\"button\" name=\"button\" className=\"btn name_btn\" style={{\r\n                                    backgroundColor: '#e4e4e4',\r\n                                    marginBottom: '15px',\r\n                                    marginTop: '5px',\r\n                                    width: '90%',\r\n                                    borderRadius: '10px',\r\n                                    border: 'solid',\r\n                                    borderColor: typeColors[nomeTipoUm.name],\r\n                                    padding: '0.3rem'\r\n                                }}>{<strong>{nome}</strong>}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"back\">\r\n                            <div style={{\r\n                                width: '110%',\r\n                                height: '110%',\r\n                                backgroundColor: '#282828',\r\n                                borderRadius: '20px',\r\n                                borderStyle: 'solid',\r\n                                borderColor: typeColors[nomeTipoUm.name],\r\n                                borderWidth: '10px'\r\n                            }}>\r\n                                <div className=\"progress-bar\">\r\n                                    <ProgressBar\r\n                                        width=\"190px\"\r\n                                        percent={vida}\r\n                                        filledBackground=\"linear-gradient(to right, #fefb72, #f0bb31)\"\r\n\r\n                                    >\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 100}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://static.wikia.nocookie.net/pkmnshuffle/images/7/7d/No_Hearts_Needed.png\"\r\n                                                />\r\n\r\n                                            )}\r\n                                        </Step>\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 150}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://static.wikia.nocookie.net/pkmnshuffle/images/1/1c/Heart_Recovery.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 200}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://static.wikia.nocookie.net/pkmnshuffle/images/d/d2/Superior_Super_Catch_Time.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n\r\n                                    </ProgressBar>\r\n                                    <div style={{\r\n                                        fontSize: '13px',\r\n                                        marginTop: '-15px',\r\n                                        marginLeft: '210px',\r\n                                        color: 'white'\r\n                                    }}>\r\n                                        <strong>{vida} Hp</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"progress-bar\">\r\n                                    <ProgressBar\r\n                                        percent={peso}\r\n                                        width=\"190px\"\r\n                                        filledBackground=\"linear-gradient(to right, #fefb72, #f0bb31)\"\r\n\r\n                                    >\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 100}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://cdn-icons-png.flaticon.com/512/188/188950.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 150}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://cdn-icons-png.flaticon.com/512/188/188969.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 200}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://cdn-icons-png.flaticon.com/512/188/188951.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n                                    </ProgressBar>\r\n                                    <div style={{\r\n                                        fontSize: '13px',\r\n                                        marginTop: '-15px',\r\n                                        marginLeft: '210px',\r\n                                        color: 'white'\r\n                                    }}>\r\n                                        <strong>{peso} Kg</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"progress-bar\">\r\n                                    <ProgressBar\r\n                                        percent={tamanhoPercent}\r\n                                        width=\"190px\"\r\n                                        filledBackground=\"linear-gradient(to right, #fefb72, #f0bb31)\"\r\n\r\n                                    >\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 10}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://cdn-icons-png.flaticon.com/512/188/188919.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n                                    </ProgressBar>\r\n                                    <div style={{\r\n                                        fontSize: '13px',\r\n                                        marginTop: '-15px',\r\n                                        marginLeft: '210px',\r\n                                        color: 'white'\r\n                                    }}>\r\n                                        <strong>{tamanho} M</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <button type=\"button\" name=\"button\" style={{\r\n                                        backgroundColor: typeColors[nomeTipoUm.name],\r\n                                        borderRadius: '10px',\r\n                                        padding: '0.1rem',\r\n                                        border: 'none'\r\n                                    }}>{nomeTipoUm.name}</button>\r\n                                    <button type=\"button\" name=\"button\" style={{\r\n                                        backgroundColor: typeColors[nomeTipoDois.name],\r\n                                        borderRadius: '10px',\r\n                                        padding: '0.1rem',\r\n                                        marginLeft: '8px',\r\n                                        border: 'none'\r\n\r\n                                    }}>{nomeTipoDois.name}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </label>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // Card com apenas um tipo\r\n    return (\r\n\r\n        <>\r\n            <input type=\"checkbox\" id=\"switch\" />\r\n\r\n            <label className=\"flip-container\" for=\"switch\" >\r\n                <div className=\"flipper\">\r\n                    <div className=\"front\">\r\n                        <div className=\"front-component\" style={{\r\n                            width: '110%',\r\n                            height: '125%',\r\n                            background: `url(${typeImage[nomeTipoUm.name]}) center`,\r\n                            borderRadius: '20px',\r\n                            borderStyle: 'solid',\r\n                            borderColor: typeColors[nomeTipoUm.name],\r\n                            borderWidth: '10px'\r\n                        }}>\r\n                            <div className=\"round-image\" style={{\r\n                                backgroundColor: typeColors[nomeTipoUm.name],\r\n                            }}><img src={url} /></div>\r\n                            <button type=\"button\" name=\"button\" className=\"btn name_btn\" style={{\r\n                                backgroundColor: '#e4e4e4',\r\n                                marginBottom: '15px',\r\n                                marginTop: '5px',\r\n                                width: '90%',\r\n                                borderRadius: '10px',\r\n                                border: 'solid',\r\n                                borderColor: typeColors[nomeTipoUm.name],\r\n                                padding: '0.3rem'\r\n                            }}>{<strong>{nome}</strong>}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"back\">\r\n                        <div style={{\r\n                            width: '110%',\r\n                            height: '110%',\r\n                            backgroundColor: '#282828',\r\n                            borderRadius: '20px',\r\n                            borderStyle: 'solid',\r\n                            borderColor: typeColors[nomeTipoUm.name],\r\n                            borderWidth: '10px'\r\n                        }}>\r\n                            <div className=\"progress-bar\">\r\n                                    <ProgressBar\r\n                                        percent={vida}\r\n                                        width=\"190px\"\r\n                                        filledBackground=\"linear-gradient(to right, #fefb72, #f0bb31)\"\r\n\r\n                                    >\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 100}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://static.wikia.nocookie.net/pkmnshuffle/images/7/7d/No_Hearts_Needed.png\"\r\n                                                />\r\n\r\n                                            )}\r\n                                        </Step>\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 150}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://static.wikia.nocookie.net/pkmnshuffle/images/1/1c/Heart_Recovery.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 200}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://static.wikia.nocookie.net/pkmnshuffle/images/d/d2/Superior_Super_Catch_Time.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n\r\n                                    </ProgressBar>\r\n                                    <div style={{\r\n                                        fontSize: '13px',\r\n                                        marginTop: '-15px',\r\n                                        marginLeft: '210px',\r\n                                        color: 'white'\r\n                                    }}>\r\n                                        <strong>{vida} Hp</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"progress-bar\">\r\n                                    <ProgressBar\r\n                                        percent={peso}\r\n                                        width=\"190px\"\r\n                                        filledBackground=\"linear-gradient(to right, #fefb72, #f0bb31)\"\r\n\r\n                                    >\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 100}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://cdn-icons-png.flaticon.com/512/188/188950.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 150}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://cdn-icons-png.flaticon.com/512/188/188969.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 200}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://cdn-icons-png.flaticon.com/512/188/188951.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n                                    </ProgressBar>\r\n                                    <div style={{\r\n                                        fontSize: '13px',\r\n                                        marginTop: '-15px',\r\n                                        marginLeft: '210px',\r\n                                        color: 'white'\r\n                                    }}>\r\n                                        <strong>{peso} Kg</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"progress-bar\">\r\n                                    <ProgressBar\r\n                                        percent={tamanhoPercent}\r\n                                        width=\"190px\"\r\n                                        filledBackground=\"linear-gradient(to right, #fefb72, #f0bb31)\"\r\n\r\n                                    >\r\n                                        <Step transition=\"scale\">\r\n                                            {({ accomplished }) => (\r\n                                                <img\r\n                                                    style={{ filter: `grayscale(${accomplished ? 0 : 10}%)` }}\r\n                                                    width=\"30\"\r\n                                                    src=\"https://cdn-icons-png.flaticon.com/512/188/188919.png\"\r\n                                                />\r\n                                            )}\r\n                                        </Step>\r\n                                    </ProgressBar>\r\n                                    <div style={{\r\n                                        fontSize: '13px',\r\n                                        marginTop: '-15px',\r\n                                        marginLeft: '210px',\r\n                                        color: 'white'\r\n                                    }}>\r\n                                        <strong>{tamanho} M</strong>\r\n                                    </div>\r\n                                </div>\r\n                            <div>\r\n                                <button type=\"button\" name=\"button\" style={{\r\n                                    backgroundColor: typeColors[nomeTipoUm.name],\r\n                                    borderRadius: '10px',\r\n                                    padding: '0.1rem',\r\n                                    border: 'none'\r\n                                }}>{nomeTipoUm.name}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </label>\r\n        </>\r\n    )\r\n}\r\nexport default ListPoke;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/pokeball.d2a148cc.png\";","import React, { useState, useEffect } from 'react';\r\nimport { GetPokemon, GetAllPokemons } from '../../services/getPokemon';\r\nimport ListPoke from '../list/listPokemons';\r\nimport pokeball from '../../assests/png/pokeball.png';\r\n\r\nimport AutoSuggest from \"react-autosuggest\";\r\nimport { notification } from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../list/poker_styles.css';\r\nimport '../list/loading_poker.css';\r\nimport './styles.css';\r\nimport './suggest.css';\r\n\r\n\r\nconst SearthPokemons = () => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [suggestions, setSuggestions] = useState([]);\r\n\r\n    const [pokemons, setPokemons] = useState([])\r\n    const [poke, setPoke] = useState([])\r\n    const [nomeTipoUm, setNomeTipoUm] = useState([])\r\n    const [nomeTipoDois, setNomeTipoDois] = useState([])\r\n    const [vida, setVida] = useState([])\r\n\r\n    useEffect(() => {\r\n        const dados = GetAllPokemons()\r\n        dados.then((props) => {\r\n            setPokemons(props['results'])\r\n        })\r\n    }, []);\r\n\r\n    const openErrorNotification = type => {\r\n        notification[type]({\r\n            message: 'Erro na Consulta',\r\n            description:\r\n                'Campo vazio ou pokemon inexistente.',\r\n        });\r\n    };\r\n\r\n    const limparInput = () => {\r\n        setValue(\"\")\r\n        setNomeTipoUm([])\r\n        setNomeTipoDois([])\r\n        setVida([])\r\n    }\r\n\r\n\r\n    const pokemonHandle = (event) => {\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 4000)\r\n\r\n        event.preventDefault();\r\n        const dados = GetPokemon(primeiraLetraMinuscula(value))\r\n        dados.catch((error) => { openErrorNotification('error') })\r\n        dados.then((props) => {\r\n            limparInput()\r\n            setPoke(props)\r\n            setVida(props['stats'][0].base_stat)\r\n            setNomeTipoUm(props['types'][0].type)\r\n            setNomeTipoDois(props['types'][1].type)\r\n\r\n        }).catch((error) => {\r\n\r\n        })\r\n    }\r\n\r\n    const lowerCasedCompanies = pokemons.map(x => x.name.toLowerCase());\r\n\r\n    function getSuggestions(value) {\r\n        return lowerCasedCompanies.filter(language =>\r\n            language.startsWith(value.trim().toLowerCase())\r\n        );\r\n    }\r\n    function primeiraLetraMinuscula(string) {\r\n        var nomePokemon = string.charAt(0).toLowerCase() + string.slice(1);\r\n        return nomePokemon;\r\n    }\r\n\r\n    return (\r\n        <div className=\"searth\">\r\n            <form className=\"form\" onSubmit={pokemonHandle}>\r\n                <AutoSuggest\r\n                    suggestions={suggestions}\r\n                    onSuggestionsClearRequested={() => setSuggestions([])}\r\n                    onSuggestionsFetchRequested={({ value }) => {\r\n                        setValue(value);\r\n                        setSuggestions(getSuggestions(value));\r\n                    }}\r\n                    onSuggestionSelected={(_, { suggestionValue }) => {\r\n                        setLoading(true)\r\n                        setTimeout(() => {\r\n                            setLoading(false);\r\n                        }, 4000)\r\n\r\n                        setValue(suggestionValue);\r\n                        const data = GetPokemon(suggestionValue)\r\n                        data.then((props) => {\r\n                            limparInput()\r\n                            setPoke(props)\r\n                            setVida(props['stats'][0].base_stat)\r\n                            setNomeTipoUm(props['types'][0].type)\r\n                            setNomeTipoDois(props['types'][1].type)\r\n\r\n                        }).catch((error) => {\r\n                            // console.log(error)\r\n                        })\r\n                    }}\r\n                    getSuggestionValue={suggestion => suggestion}\r\n                    renderSuggestion={suggestion => <div>{suggestion}</div>}\r\n                    inputProps={{\r\n                        placeholder: \"Searth pokemon\",\r\n                        value: value,\r\n                        onChange: (_, { newValue, method }) => {\r\n                            setValue(newValue)\r\n                        }\r\n\r\n                    }}\r\n                    highlightFirstSuggestion={true}\r\n                    onClick={pokemonHandle}\r\n                />\r\n\r\n                <div className=\"button-submit\" >\r\n                    <img type=\"submit\" src={pokeball} className=\"logo_loading\" alt=\"pokebola\"\r\n                        onClick={pokemonHandle} />\r\n                </div>\r\n            </form>\r\n            {loading ?\r\n\r\n                <div className=\"loading_user\" style={{ backgroundColor: '#1cabf2', boxShadow: 'none', marginTop: '-25px' }}>\r\n                    <div className=\"centralizar_poker\">\r\n                        <div className=\"loading_poker\">\r\n                            <div className=\"loading_poker-button\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <ListPoke {...poke}\r\n                    nomeTipoUm={nomeTipoUm}\r\n                    nomeTipoDois={nomeTipoDois}\r\n                    vida={vida} />\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default SearthPokemons;","export default __webpack_public_path__ + \"static/media/intro.927812cc.png\";","import SearthPokemons from './components/searth/searthPokemons';\r\n// import DevTools from './devTools';\r\n\r\nimport ImageIntro from './assests/png/intro.png';\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"div-img\">\r\n          <img className=\"image-intro\" src={ImageIntro} alt=\"intro\" />\r\n        </div>\r\n        <SearthPokemons />\r\n        {/* <DevTools /> */}\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}